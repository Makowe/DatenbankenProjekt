{"version":3,"sources":["./src/app/modules/recipe-component/components/component-edit/component-edit.component.ts","./src/app/modules/recipe-component/components/component-edit/component-edit.component.html","./src/app/modules/recipe/components/recipe-edit/recipe-edit.component.ts","./src/app/modules/recipe/components/recipe-edit/recipe-edit.component.html","./src/app/modules/recipe/components/recipe-detail/recipe-detail.component.html","./src/app/modules/recipe/components/recipe-detail/recipe-detail.component.ts","./src/app/modules/recipe-component/components/component-list/component-list.component.ts","./src/app/modules/recipe-component/components/component-list/component-list.component.html","./src/app/modules/main/components/toolbar/toolbar.component.ts","./src/app/modules/main/components/toolbar/toolbar.component.html","./src/environments/environment.ts","./src/app/modules/main/components/footer/footer.component.ts","./src/app/modules/main/components/footer/footer.component.html","./src/app/services/data.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/modules/recipe-component/recipe-component.module.ts","./src/app/modules/main/main.module.ts","./src/app/modules/recipe-component/components/component-detail/component-detail.component.ts","./src/app/modules/recipe-component/components/component-detail/component-detail.component.html","./src/app/modules/recipe/recipe.module.ts","./src/app/modules/recipe-component/components/component-new/component-new.component.ts","./src/app/modules/recipe-component/components/component-new/component-new.component.html","./src/app/modules/main/components/header/header.component.ts","./src/app/modules/main/components/header/header.component.html","./src/app/modules/recipe/components/recipe-list/recipe-list.component.ts","./src/app/modules/recipe/components/recipe-list/recipe-list.component.html","./src/app/app-routing.module.ts","./src/app/modules/recipe/components/recipe-new/recipe-new.component.ts","./src/app/modules/recipe/components/recipe-new/recipe-new.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Recipe } from 'src/app/models/recipe';\nimport { RecipeComponent } from 'src/app/models/recipeComponent';\nimport { ResponseMessage } from 'src/app/models/responseMessage';\nimport { DataService } from 'src/app/services/data.service';\nimport { RecipeComponentModule } from '../../recipe-component.module';\n\n@Component({\n    selector: 'app-component-edit',\n    templateUrl: './component-edit.component.html',\n    styleUrls: ['./component-edit.component.scss']\n})\nexport class ComponentEditComponent implements OnInit {\n    id: number = 0;\n\n    componentName: string = '';\n\n    constructor(private dataService: DataService, private route: ActivatedRoute, private router: Router, private snackbar: MatSnackBar) { }\n\n    ngOnInit(): void {\n        this.route.params.subscribe(params => {\n            this.id = params['id'];\n        });\n        this.loadComponent(this.id);\n    }\n\n    loadComponent(recipeId: number): void {\n        this.dataService.getComponentById(recipeId).subscribe(\n            (data: RecipeComponent) => {\n                this.componentName = data.name;\n            },\n            error => {\n                this.snackbar.open('Verbindung zum Server konnte nicht hergestellt werden', 'Schließen', { duration: 5000 });\n            }\n        );\n    }\n\n    toolbarClicked(buttonName: string) {\n        switch (buttonName) {\n            case 'save':\n                this.saveComponent();\n                break;\n            case 'close':\n                this.router.navigate(['Component']);\n                break;\n        }\n    }\n\n    saveComponent(): void {\n        console.log(\"save\");\n        let newComponent: RecipeComponent = {\n            name: this.componentName,\n            id: this.id,\n        };\n\n        this.dataService.editComponent(newComponent).subscribe(\n            (returnValue: ResponseMessage) => {\n                let id = returnValue.value;\n                if (id) {\n                    this.router.navigate(['Component', 'Show', id]);\n                }\n                this.snackbar.open(returnValue.message, 'Schließen', {\n                    duration: 5000,\n                });\n            },\n            error => {\n                this.snackbar.open('Verbindung zum Server konnte nicht hergestellt werden', 'Schließen', { duration: 5000 });\n            }\n        );\n    }\n}\n","<app-toolbar [actions]=\"['save', 'close']\" (clicked)=\"toolbarClicked($event)\"></app-toolbar>\n<div class=\"card-list\">\n    <mat-card class=\"card\">\n        <mat-card-title>{{componentName == '' ? 'Zutat' : componentName}}</mat-card-title>\n        <mat-form-field>\n            <mat-label>Name</mat-label>\n            <input matInput [(ngModel)]=\"componentName\">\n        </mat-form-field>\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Instruction } from 'src/app/models/instruction';\nimport { Recipe } from 'src/app/models/recipe';\nimport { RecipeComponent } from 'src/app/models/recipeComponent';\nimport { ResponseMessage } from 'src/app/models/responseMessage';\nimport { Unit } from 'src/app/models/unit';\nimport { ComponentNewComponent } from 'src/app/modules/recipe-component/components/component-new/component-new.component';\nimport { DataService } from 'src/app/services/data.service';\n\n@Component({\n    selector: 'app-recipe-edit',\n    templateUrl: './recipe-edit.component.html',\n    styleUrls: ['./recipe-edit.component.scss']\n})\nexport class RecipeEditComponent implements OnInit {\n\n    id: number = 0;\n    recipeName: string = '';\n    people: number = 2;\n\n    availableComponents: RecipeComponent[] = [];\n    filteredComponents: RecipeComponent[] = [];\n    currentComponents: RecipeComponent[] = [];\n    componentsLegal: boolean[] = [];\n\n    availableUnits: Unit[] = [];\n    filteredUnits: Unit[] = [];\n\n    currentInstructions: Instruction[] = [];\n\n    constructor(private dataService: DataService, private route: ActivatedRoute, private router: Router, private snackbar: MatSnackBar, private dialog: MatDialog) {\n    }\n\n    ngOnInit() {\n        this.route.params.subscribe(params => {\n            this.id = params['id'];\n        });\n        this.loadRecipe(this.id);\n        this.loadAllComponents();\n        this.loadAllUnits();\n    }\n\n    loadRecipe(recipeId: number): void {\n        this.dataService.getRecipeById(recipeId).subscribe(\n            (data: Recipe) => {\n                this.recipeName = data.name;\n                this.people = data.people;\n                if (data.components != undefined) {\n                    this.currentComponents = data.components;\n                }\n                if (data.instructions != undefined) {\n                    this.currentInstructions = data.instructions;\n                }\n            },\n            error => {\n                this.snackbar.open('Verbindung zum Server konnte nicht hergestellt werden', 'Schließen', { duration: 5000 });\n            }\n        );\n    }\n    loadAllComponents(): void {\n        this.dataService.getAllComponents().subscribe(\n            (data: RecipeComponent[]) => {\n                this.availableComponents = data;\n                this.availableComponents = this.availableComponents.filter(component => component.id && component.id > 0);\n            },\n            error => {\n                this.snackbar.open('Verbindung zum Server konnte nicht hergestellt werden', 'Schließen', { duration: 5000 });\n            }\n        );\n    }\n\n    loadAllUnits(): void {\n        this.dataService.getAllUnits().subscribe(\n            (data: Unit[]) => {\n                this.availableUnits = data;\n                console.log(this.availableUnits);\n            },\n            error => {\n                this.snackbar.open('Verbindung zum Server konnte nicht hergestellt werden', 'Schließen', { duration: 5000 });\n            }\n        );\n    }\n\n    mainToolbarClicked(action: string): void {\n        switch (action) {\n            case 'save':\n                this.saveRecipe();\n                break;\n            case 'close':\n                this.router.navigate(['Recipe', 'Show', this.id]);\n        }\n    }\n\n    componentToolbar(action: string): void {\n        switch (action) {\n            case 'add':\n                this.addComponentToList();\n                break;\n        }\n    }\n\n    instructionToolbar(action: string): void {\n        switch (action) {\n            case 'add':\n                this.addInstructionToList();\n                break;\n        }\n    }\n\n    updateComponentFilter(inputString: string): void {\n        this.filteredComponents = this.availableComponents.filter((component: RecipeComponent) => {\n            return component.name.toLowerCase().includes(inputString.toLowerCase());\n        });\n    }\n\n    addComponentToList(): void {\n        let newComponent: RecipeComponent = {\n            name: '',\n            amount: 0,\n            unitName: 'Gramm',\n            unitShortname: 'g'\n        };\n        this.currentComponents.push(newComponent);\n        this.componentsLegal.push(false);\n    }\n\n    addInstructionToList(): void {\n        let newInstruction: Instruction = {\n            step: this.currentInstructions.length + 1,\n            description: ''\n        };\n        this.currentInstructions.push(newInstruction);\n    }\n\n    checkComponentLegal(index: number): void {\n        // the type component name is legal\n        if (this.availableComponents.map(component => component.name).includes(this.currentComponents[index].name)) {\n            this.componentsLegal[index] = true;\n        }\n        else {\n            this.componentsLegal[index] = false;\n        }\n    }\n\n    removeComponent(index: number) {\n        this.currentComponents.splice(index, 1);\n        this.componentsLegal.splice(index, 1);\n    }\n\n    removeInstruction(index: number) {\n        this.currentInstructions.splice(index, 1);\n    }\n\n    saveRecipe() {\n        let undefinedComponentIndex = -1;\n        this.currentComponents.forEach((component, index) => {\n            const existingComponent = this.availableComponents.find(availableComponent =>\n                availableComponent.name === component.name\n            );\n\n            if (existingComponent === undefined) {\n                component.id = 0;\n                undefinedComponentIndex = index;\n            }\n            else {\n                component.id = existingComponent.id;\n            }\n        });\n\n        if (undefinedComponentIndex !== -1) {\n            let snackbarRef = this.snackbar.open(`Die Zutat ${this.currentComponents[undefinedComponentIndex].name} exisitert nicht`, 'Hinzufügen', { duration: 10000 });\n\n            snackbarRef.onAction().subscribe(() => {\n                let dialogConfig = new MatDialogConfig;\n                dialogConfig.width = '600px';\n                dialogConfig.data = this.currentComponents[undefinedComponentIndex].name;\n                dialogConfig.disableClose = true;\n                dialogConfig.autoFocus = true;\n                dialogConfig.hasBackdrop = true;\n                let dialogRef = this.dialog.open(ComponentNewComponent, dialogConfig);\n\n                dialogRef.afterClosed().subscribe(result => {\n                    this.loadAllComponents();\n                });\n            });\n            return;\n        }\n\n        const recipe: Recipe = {\n            id: this.id,\n            name: this.recipeName,\n            people: this.people,\n            components: this.currentComponents,\n            instructions: this.currentInstructions\n        };\n\n        this.dataService.editRecipe(recipe).subscribe((returnValue: ResponseMessage) => {\n            let id = returnValue.value;\n            if (id) {\n                this.router.navigate(['Recipe', 'Show', id]);\n            }\n            this.snackbar.open(returnValue.message, 'Schließen', { duration: 5000 });\n        },\n            error => {\n                this.snackbar.open('Verbindung zum Server konnte nicht hergestellt werden', 'Schließen', { duration: 5000 });\n            }\n        );\n    }\n\n}\n","<app-toolbar [actions]=\"['save', 'close']\" (clicked)=\"mainToolbarClicked($event)\"></app-toolbar>\n<div class=\"card-list card-list-wrap\">\n    <mat-card class=\"card\">\n        <mat-card-title>{{recipeName == '' ? 'Rezept' : recipeName}}</mat-card-title>\n        <div class=\"main-recipe\">\n            <mat-form-field>\n                <mat-label>Name</mat-label>\n                <input matInput [(ngModel)]=\"recipeName\">\n            </mat-form-field>\n            <mat-form-field>\n                <mat-label>Personen</mat-label>\n                <input matInput type=\"number\" [(ngModel)]=\"people\">\n            </mat-form-field>\n        </div>\n\n    </mat-card>\n    <mat-card class=\"card\">\n        <mat-card-title>Zutaten</mat-card-title>\n\n        <div *ngFor=\"let component of currentComponents; let i = index\" class=\"single-component\">\n            <mat-form-field>\n                <mat-label>Zutat</mat-label>\n                <input type=\"text\" [(ngModel)]=\"component.name\" matInput [matAutocomplete]=\"componentAuto\"\n                    (keyup)=\"updateComponentFilter(component.name); checkComponentLegal(i);\"\n                    (click)=\"updateComponentFilter(component.name)\">\n                <mat-autocomplete autoActiveFirstOption #componentAuto=\"matAutocomplete\"\n                    (change)=checkComponentLegal(i);>\n                    <mat-option *ngFor=\"let autocompleteComponent of filteredComponents\"\n                        [value]=\"autocompleteComponent.name\">\n                        {{autocompleteComponent.name}}\n                    </mat-option>\n                </mat-autocomplete>\n            </mat-form-field>\n\n            <mat-form-field class=\"thin\">\n                <mat-label>Menge</mat-label>\n                <input type=\"number\" [(ngModel)]=\"component.amount\" matInput>\n            </mat-form-field>\n\n            <mat-form-field class=\"thin\">\n                <mat-label>Einheit</mat-label>\n                <mat-select [(ngModel)]=\"component.unitName\">\n                    <mat-option *ngFor=\"let unit of availableUnits\" [value]=\"unit.name\">{{unit.name}}\n                        ({{unit.shortname}})</mat-option>\n                </mat-select>\n            </mat-form-field>\n            <app-toolbar [small]=\"true\" [actions]=\"['delete']\" (clicked)=\"removeComponent(i)\"></app-toolbar>\n        </div>\n        <app-toolbar [actions]=\"['add']\" (clicked)=\"componentToolbar($event)\"></app-toolbar>\n    </mat-card>\n\n    <mat-card class=\"card\">\n        <mat-card-title>Arbeitsschritte</mat-card-title>\n        <div *ngFor=\"let instruction of currentInstructions; let i = index\" class=\"single-component\">\n            <mat-form-field class=\"thin\">\n                <mat-label>Schritt</mat-label>\n                <input type=\"number\" [(ngModel)]=\"instruction.step\" matInput>\n            </mat-form-field>\n\n            <mat-form-field class=\"grow\">\n                <mat-label>Beschreibung</mat-label>\n                <input type=\"text\" [(ngModel)]=\"instruction.description\" matInput>\n            </mat-form-field>\n            <app-toolbar [small]=\"true\" [actions]=\"['delete']\" (clicked)=\"removeInstruction(i)\"></app-toolbar>\n        </div>\n        <app-toolbar [actions]=\"['add']\" (clicked)=\"instructionToolbar($event)\"></app-toolbar>\n    </mat-card>\n\n</div>","<app-toolbar [actions]=\"['undo','edit', 'add', 'delete']\" (clicked)=\"toolbarClicked($event)\"></app-toolbar>\n<div class=\"card-list card-list-wrap\">\n    <mat-card class=\"card\">\n        <mat-card-title>{{recipe?.name}}</mat-card-title>\n        <mat-card-subtitle>{{recipe?.people}} Personen</mat-card-subtitle>\n    </mat-card>\n    <mat-card class=\"card\">\n        <mat-card-title>Zutaten</mat-card-title>\n        <ul>\n            <li *ngFor=\"let component of recipe?.components\">\n                {{component.amount}} {{component.unitShortname}} {{component.name}}\n            </li>\n        </ul>\n    </mat-card>\n    <mat-card class=\"card\">\n        <mat-card-title>Arbeitsschritte</mat-card-title>\n        <p *ngFor=\"let instruction of recipe?.instructions\">\n            {{instruction.step}}. {{instruction.description}}\n        </p>\n\n    </mat-card>\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { Recipe } from 'src/app/models/recipe';\r\nimport { ResponseMessage } from 'src/app/models/responseMessage';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n    selector: 'app-recipe-detail',\r\n    templateUrl: './recipe-detail.component.html',\r\n    styleUrls: ['./recipe-detail.component.scss']\r\n})\r\nexport class RecipeDetailComponent implements OnInit {\r\n\r\n    recipe?: Recipe;\r\n    id: number = 0;\r\n\r\n    constructor(private dataService: DataService, private route: ActivatedRoute, private router: Router, private snackbar: MatSnackBar) { }\r\n\r\n    ngOnInit(): void {\r\n        this.route.params.subscribe(params => {\r\n            this.id = params['id'];\r\n        });\r\n        this.loadRecipe(this.id);\r\n    }\r\n\r\n    loadRecipe(recipeId: number): void {\r\n        this.dataService.getRecipeById(recipeId).subscribe(\r\n            (data: Recipe) => {\r\n                this.recipe = data;\r\n            },\r\n            error => {\r\n                this.snackbar.open('Verbindung zum Server konnte nicht hergestellt werden', 'Schließen', { duration: 5000 });\r\n            }\r\n        );\r\n    }\r\n\r\n    toolbarClicked(buttonName: string): void {\r\n        switch (buttonName) {\r\n            case 'undo':\r\n                this.router.navigate(['Recipe']);\r\n                break;\r\n            case 'edit':\r\n                this.router.navigate(['Recipe', 'Edit', this.id]);\r\n                break;\r\n            case 'add':\r\n                this.router.navigate(['Recipe', 'New']);\r\n                break;\r\n            case 'delete':\r\n                this.deleteRecipe();\r\n                this.router.navigate(['Recipe']);\r\n        }\r\n    }\r\n\r\n    deleteRecipe(): void {\r\n        this.dataService.deleteRecipe(this.id).subscribe(\r\n            (returnValue: ResponseMessage) => {\r\n                this.snackbar.open(returnValue.message, 'Schließen', { duration: 5000 });\r\n                this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n                    this.router.navigate(['Recipe']);\r\n                });\r\n            }\r\n        );\r\n    }\r\n}\r\n","import { componentFactoryName } from '@angular/compiler';\r\nimport { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Recipe } from 'src/app/models/recipe';\r\nimport { RecipeComponent } from 'src/app/models/recipeComponent';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { RecipeComponentModule } from '../../recipe-component.module';\r\nimport { ComponentNewComponent } from '../component-new/component-new.component';\r\n\r\n@Component({\r\n    selector: 'app-component-list',\r\n    templateUrl: './component-list.component.html',\r\n    styleUrls: ['./component-list.component.scss']\r\n})\r\nexport class ComponentListComponent implements OnInit {\r\n\r\n    @Output() selectedRecipe = new EventEmitter<number>();\r\n\r\n    allComponents: RecipeComponent[] = [];\r\n\r\n    constructor(private dataService: DataService, private router: Router, private snackbar: MatSnackBar) { }\r\n\r\n    ngOnInit() {\r\n        this.loadAllComponents();\r\n    }\r\n\r\n    loadAllComponents(): void {\r\n        this.dataService.getAllComponents().subscribe(\r\n            (data: RecipeComponent[]) => {\r\n                this.allComponents = data;\r\n                this.allComponents = this.allComponents.filter(component => component.id && component.id > 0);\r\n            },\r\n            error => {\r\n                this.snackbar.open('Verbindung zum Server konnte nicht hergestellt werden', 'Schließen', { duration: 5000 });\r\n            }\r\n        );\r\n    }\r\n\r\n    selectComponent(id: number | undefined): void {\r\n        this.router.navigate(['Component', 'Show', id],);\r\n    }\r\n\r\n    toolbarClicked(buttonName: string): void {\r\n        switch (buttonName) {\r\n            case 'add':\r\n                this.router.navigate(['Component', 'New']);\r\n                break;\r\n        }\r\n    }\r\n}\r\n","<app-toolbar [actions]=\"['add']\" (clicked)=\"toolbarClicked($event)\"></app-toolbar>\r\n<div class=\"card-list\">\r\n\r\n    <mat-card class=\"card card-click card-thin\" *ngFor=\"let component of allComponents\"\r\n        (click)=\"selectComponent(component.id)\">\r\n        <mat-card-title>{{component.name}}</mat-card-title>\r\n    </mat-card>\r\n</div>","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-toolbar',\r\n    templateUrl: './toolbar.component.html',\r\n    styleUrls: ['./toolbar.component.scss']\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n\r\n    @Input() disabled: boolean[] = [];\r\n\r\n    @Input() small: boolean = false;\r\n\r\n    @Input() actions: string[] = [];\r\n\r\n    @Output() clicked = new EventEmitter<string>();\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n    sendOutput(action: string) {\r\n        this.clicked.emit(action);\r\n    }\r\n\r\n    isDisabled(i: number): boolean {\r\n        if (i >= this.disabled.length) { return false; }\r\n        else { return this.disabled[i]; }\r\n    }\r\n\r\n}\r\n","<div class=\"multiple-button-container\" *ngIf=\"!small\">\r\n    <div *ngFor=\"let action of actions; let i = index\" class=\"button-container\">\r\n        <button mat-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\" (click)=\"sendOutput(action)\"\r\n            [disabled]=\"isDisabled(i)\">\r\n            <mat-icon>{{action}}</mat-icon>\r\n        </button>\r\n    </div>\r\n\r\n</div>\r\n<div class=\"multiple-button-container\" *ngIf=\"small\">\r\n    <div *ngFor=\"let action of actions; let i = index\" class=\"button-container\">\r\n        <button mat-mini-fab color=\"primary\" aria-label=\"Example icon button with a delete icon\"\r\n            (click)=\"sendOutput(action)\" [disabled]=\"isDisabled(i)\">\r\n            <mat-icon>{{action}}</mat-icon>\r\n        </button>\r\n    </div>\r\n\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n    production: false,\r\n    apiUrl: \"https://localhost:44335/api/\"\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\">\n    <span>Makowe</span>\n</mat-toolbar>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Recipe } from '../models/recipe';\r\nimport { RecipeComponent } from '../models/recipeComponent';\r\nimport { ResponseMessage } from '../models/responseMessage';\r\nimport { Unit } from '../models/unit';\r\nimport { RecipeComponentModule } from '../modules/recipe-component/recipe-component.module';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n    apiUrl: string = environment.apiUrl;\r\n\r\n    constructor(private http: HttpClient) { }\r\n\r\n    //RECIPES\r\n\r\n    getAllRecipes(): Observable<Recipe[]> {\r\n        return this.http.get<Recipe[]>(`${this.apiUrl}Recipe`);\r\n    }\r\n\r\n    getRecipeById(id: number): Observable<Recipe> {\r\n        return this.http.get<Recipe>(`${this.apiUrl}Recipe/${id}`);\r\n    }\r\n\r\n    postNewRecipe(recipe: Recipe): Observable<ResponseMessage> {\r\n        return this.http.post<ResponseMessage>(`${this.apiUrl}Recipe`, recipe);\r\n    }\r\n\r\n    editRecipe(recipe: Recipe): Observable<ResponseMessage> {\r\n        return this.http.put<ResponseMessage>(`${this.apiUrl}Recipe`, recipe);\r\n    }\r\n\r\n    deleteRecipe(id: number): Observable<ResponseMessage> {\r\n        return this.http.delete<ResponseMessage>(`${this.apiUrl}Recipe/${id}`);\r\n    }\r\n\r\n    //COMPONENTS\r\n\r\n    getAllComponents(): Observable<RecipeComponent[]> {\r\n        return this.http.get<RecipeComponent[]>(`${this.apiUrl}Component`);\r\n    }\r\n\r\n    getComponentById(id: number): Observable<RecipeComponent> {\r\n        return this.http.get<RecipeComponent>(`${this.apiUrl}Component/${id}`);\r\n    }\r\n\r\n    postNewComponent(component: RecipeComponent): Observable<ResponseMessage> {\r\n        return this.http.post<ResponseMessage>(`${this.apiUrl}Component`, component);\r\n    }\r\n\r\n    editComponent(component: RecipeComponent): Observable<ResponseMessage> {\r\n        return this.http.put<ResponseMessage>(`${this.apiUrl}Component`, component);\r\n    }\r\n\r\n    deleteComponent(id: number): Observable<ResponseMessage> {\r\n        return this.http.delete<ResponseMessage>(`${this.apiUrl}Component/${id}`);\r\n    }\r\n\r\n    // OTHER\r\n\r\n    getAllUnits(): Observable<Unit[]> {\r\n        return this.http.get<Unit[]>(`${this.apiUrl}Unit`);\r\n    }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-root',\r\n    templateUrl: './app.component.html',\r\n    styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n    title = 'web-app';\r\n\r\n}\r\n","<mat-drawer-container>\r\n\r\n    <div class=\"window\">\r\n        <app-header></app-header>\r\n\r\n        <div class=\"content\">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n\r\n        <app-footer></app-footer>\r\n    </div>\r\n\r\n\r\n</mat-drawer-container>","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIcon, MatIconModule } from '@angular/material/icon';\r\nimport { MainModule } from './modules/main/main.module';\r\nimport { RecipeModule } from './modules/recipe/recipe.module';\r\nimport { RecipeComponentModule } from './modules/recipe-component/recipe-component.module';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AppComponent,\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        AppRoutingModule,\r\n        BrowserAnimationsModule,\r\n        MatSidenavModule,\r\n        MainModule,\r\n        RecipeModule,\r\n        RecipeComponentModule\r\n    ],\r\n    providers: [],\r\n    bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ComponentListComponent } from './components/component-list/component-list.component';\r\nimport { ComponentDetailComponent } from './components/component-detail/component-detail.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { ComponentNewComponent } from './components/component-new/component-new.component';\r\nimport { ComponentEditComponent } from './components/component-edit/component-edit.component';\r\nimport { MainModule } from '../main/main.module';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        ComponentListComponent,\r\n        ComponentDetailComponent,\r\n        ComponentNewComponent,\r\n        ComponentEditComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        BrowserAnimationsModule,\r\n        MatCardModule,\r\n        MatToolbarModule,\r\n        MatSidenavModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        CommonModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MainModule,\r\n        FormsModule,\r\n        MatInputModule,\r\n        MatSnackBarModule,\r\n        MatDialogModule\r\n\r\n    ],\r\n    exports: [\r\n        ComponentListComponent,\r\n        ComponentDetailComponent,\r\n        ComponentNewComponent,\r\n        ComponentEditComponent\r\n    ],\r\n    schemas: [\r\n        CUSTOM_ELEMENTS_SCHEMA\r\n    ]\r\n})\r\nexport class RecipeComponentModule { }\r\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FooterComponent } from './components/footer/footer.component';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { ToolbarComponent } from './components/toolbar/toolbar.component';\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        HeaderComponent,\r\n        FooterComponent,\r\n        ToolbarComponent,\r\n\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        BrowserAnimationsModule,\r\n        MatCardModule,\r\n        MatToolbarModule,\r\n        MatSidenavModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        CommonModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n    ],\r\n    exports: [\r\n        HeaderComponent,\r\n        FooterComponent,\r\n        ToolbarComponent\r\n    ],\r\n    schemas: [\r\n        CUSTOM_ELEMENTS_SCHEMA\r\n    ]\r\n})\r\nexport class MainModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RecipeComponent } from 'src/app/models/recipeComponent';\nimport { ResponseMessage } from 'src/app/models/responseMessage';\nimport { DataService } from 'src/app/services/data.service';\nimport { RecipeComponentModule } from '../../recipe-component.module';\n\n@Component({\n    selector: 'app-component-detail',\n    templateUrl: './component-detail.component.html',\n    styleUrls: ['./component-detail.component.scss']\n})\nexport class ComponentDetailComponent implements OnInit {\n\n    component?: RecipeComponent;\n    id: number = 0;\n\n    constructor(private dataService: DataService, private route: ActivatedRoute, private router: Router, private snackbar: MatSnackBar) { }\n\n    ngOnInit(): void {\n        this.route.params.subscribe(params => {\n            this.id = params['id'];\n        });\n        this.loadComponent(this.id);\n    }\n\n    loadComponent(recipeId: number): void {\n        this.dataService.getComponentById(recipeId).subscribe(\n            (data: RecipeComponent) => {\n                this.component = data;\n            },\n            error => {\n                this.snackbar.open('Verbindung zum Server konnte nicht hergestellt werden', 'Schließen', { duration: 5000 });\n            }\n        );\n    }\n\n    toolbarClicked(buttonName: string): void {\n        switch (buttonName) {\n            case 'undo':\n                this.router.navigate(['Component']);\n                break;\n            case 'edit':\n                this.router.navigate(['Component', 'Edit', this.id],);\n                break;\n            case 'add':\n                this.router.navigate(['Component', 'New']);\n                break;\n            case 'delete':\n                this.deleteComponent();\n        }\n    }\n\n    deleteComponent(): void {\n        this.dataService.deleteComponent(this.id).subscribe(\n            (returnValue: ResponseMessage) => {\n                this.snackbar.open(returnValue.message, 'Schließen', { duration: 5000 });\n                this.router.navigate(['Component']);\n            }\n        );\n    }\n}\n","<app-toolbar [actions]=\"['undo', 'edit','add', 'delete']\" (clicked)=\"toolbarClicked($event)\"></app-toolbar>\n<div class=\"card-list\">\n    <mat-card class=\"card\">\n        <mat-card-title>{{component?.name}}</mat-card-title>\n    </mat-card>\n</div>","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RecipeListComponent } from './components/recipe-list/recipe-list.component';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { RecipeDetailComponent } from './components/recipe-detail/recipe-detail.component';\r\nimport { MainModule } from '../main/main.module';\r\nimport { RecipeEditComponent } from './components/recipe-edit/recipe-edit.component';\r\nimport { RecipeNewComponent } from './components/recipe-new/recipe-new.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        RecipeListComponent,\r\n        RecipeDetailComponent,\r\n        RecipeEditComponent,\r\n        RecipeNewComponent\r\n    ],\r\n    imports: [\r\n        BrowserModule,\r\n        HttpClientModule,\r\n        BrowserAnimationsModule,\r\n        MatCardModule,\r\n        MatToolbarModule,\r\n        MatSidenavModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        CommonModule,\r\n        MatButtonModule,\r\n        MatIconModule,\r\n        MainModule,\r\n        MatInputModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatAutocompleteModule,\r\n        MatSelectModule,\r\n        MatDialogModule\r\n\r\n    ],\r\n    exports: [\r\n        RecipeListComponent,\r\n        RecipeDetailComponent,\r\n        RecipeEditComponent,\r\n        RecipeNewComponent\r\n    ],\r\n    schemas: [\r\n        CUSTOM_ELEMENTS_SCHEMA\r\n    ]\r\n})\r\nexport class RecipeModule { }\r\n","import { Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MAT_DIALOG_SCROLL_STRATEGY_FACTORY } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { modelGenerator } from 'src/app/models/generator';\r\nimport { RecipeComponent } from 'src/app/models/recipeComponent';\r\nimport { ResponseMessage } from 'src/app/models/responseMessage';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { RecipeComponentModule } from '../../recipe-component.module';\r\n\r\n@Component({\r\n    selector: 'app-component-new',\r\n    templateUrl: './component-new.component.html',\r\n    styleUrls: ['./component-new.component.scss']\r\n})\r\nexport class ComponentNewComponent implements OnInit {\r\n\r\n    componentName: string = '';\r\n\r\n    constructor(\r\n        private dataService: DataService,\r\n        private router: Router,\r\n        private snackbar: MatSnackBar,\r\n        @Optional() public dialogRef?: MatDialogRef<ComponentNewComponent>,\r\n        @Optional() @Inject(MAT_DIALOG_DATA) public data: string = '') {\r\n        if (dialogRef != undefined) { this.componentName = data; }\r\n    }\r\n\r\n    ngOnInit(): void { }\r\n\r\n    toolbarClicked(buttonName: string) {\r\n        switch (buttonName) {\r\n            case 'save':\r\n                this.saveComponent();\r\n                break;\r\n            case 'close':\r\n                if (this.dialogRef) { this.closeDialog(); }\r\n                else { this.router.navigate(['Component']); }\r\n                break;\r\n        }\r\n    }\r\n\r\n    saveComponent(): void {\r\n        console.log(\"save\");\r\n        let newComponent: RecipeComponent = {\r\n            name: this.componentName,\r\n            unitName: '',\r\n            unitShortname: ''\r\n        };\r\n\r\n        this.dataService.postNewComponent(newComponent).subscribe(\r\n            (returnValue: ResponseMessage) => {\r\n                let id = returnValue.value;\r\n                if (id) {\r\n                    if (this.dialogRef) { this.closeDialog(); }\r\n                    else { this.router.navigate(['Component', 'Show', id]); }\r\n                }\r\n                this.snackbar.open(returnValue.message, 'Schließen', {\r\n                    duration: 5000,\r\n                });\r\n            },\r\n            error => {\r\n                this.snackbar.open('Verbindung zum Server konnte nicht hergestellt werden', 'Schließen', { duration: 5000 });\r\n            }\r\n        );\r\n    }\r\n\r\n    closeDialog(): void {\r\n        this.dialogRef?.close();\r\n    }\r\n}\r\n","<app-toolbar [actions]=\"['save', 'close']\" (clicked)=\"toolbarClicked($event)\"></app-toolbar>\n<div class=\"card-list\">\n    <mat-card class=\"card\">\n        <mat-card-title>{{componentName == '' ? 'Neue Zutat' : componentName}}</mat-card-title>\n        <mat-form-field>\n            <mat-label>Name</mat-label>\n            <input matInput [(ngModel)]=\"componentName\">\n        </mat-form-field>\n    </mat-card>\n</div>","import { EventEmitter } from '@angular/core';\r\nimport { Component, OnInit, Output } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-header',\r\n    templateUrl: './header.component.html',\r\n    styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n    @Output() clickMenu = new EventEmitter<void>();\r\n\r\n    constructor(public router: Router) { }\r\n\r\n    ngOnInit(): void {\r\n    }\r\n\r\n}\r\n","<div class=\"header\">\r\n    <mat-toolbar color=\"primary\">\r\n        <span>Rezept Manager</span>\r\n        <button mat-button (click)=\"router.navigate(['Recipe'])\">\r\n            Rezepte\r\n        </button>\r\n        <button mat-button (click)=\"router.navigate(['Component'])\">\r\n            Zutaten\r\n        </button>\r\n\r\n    </mat-toolbar>\r\n</div>","import { Component, EventEmitter, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Recipe } from 'src/app/models/recipe';\r\nimport { DataService } from 'src/app/services/data.service';\r\n\r\n@Component({\r\n    selector: 'app-recipe-list',\r\n    templateUrl: './recipe-list.component.html',\r\n    styleUrls: ['./recipe-list.component.scss']\r\n})\r\nexport class RecipeListComponent implements OnInit {\r\n\r\n    @Output() selectedRecipe = new EventEmitter<number>();\r\n\r\n    allRecipes: Recipe[] = [];\r\n\r\n    constructor(private dataService: DataService, private router: Router, private snackbar: MatSnackBar) { }\r\n\r\n    ngOnInit() {\r\n        this.loadAllRecipes();\r\n    }\r\n\r\n    loadAllRecipes(): void {\r\n        this.dataService.getAllRecipes().subscribe(\r\n            (data: Recipe[]) => {\r\n                this.allRecipes = data;\r\n            },\r\n            error => {\r\n                this.snackbar.open('Verbindung zum Server konnte nicht hergestellt werden', 'Schließen', { duration: 5000 });\r\n            }\r\n        );\r\n    }\r\n\r\n    selectRecipe(id: number | undefined): void {\r\n        this.router.navigate(['Recipe', 'Show', id],);\r\n    }\r\n\r\n    toolbarClicked(buttonName: string): void {\r\n        switch (buttonName) {\r\n            case 'add':\r\n                this.router.navigate(['Recipe', 'New'],);\r\n        }\r\n    }\r\n}\r\n","<app-toolbar [actions]=\"['add']\" (clicked)=\"toolbarClicked($event)\"></app-toolbar>\n<div class=\"card-list\">\n\n    <mat-card class=\"card card-click\" *ngFor=\"let recipe of allRecipes\" (click)=\"selectRecipe(recipe.id)\">\n        <mat-card-title>{{recipe.name}}</mat-card-title>\n        <mat-card-subtitle>{{recipe.people}} Personen</mat-card-subtitle>\n    </mat-card>\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ComponentDetailComponent } from './modules/recipe-component/components/component-detail/component-detail.component';\r\nimport { ComponentEditComponent } from './modules/recipe-component/components/component-edit/component-edit.component';\r\nimport { ComponentListComponent } from './modules/recipe-component/components/component-list/component-list.component';\r\nimport { ComponentNewComponent } from './modules/recipe-component/components/component-new/component-new.component';\r\nimport { RecipeDetailComponent } from './modules/recipe/components/recipe-detail/recipe-detail.component';\r\nimport { RecipeEditComponent } from './modules/recipe/components/recipe-edit/recipe-edit.component';\r\nimport { RecipeListComponent } from './modules/recipe/components/recipe-list/recipe-list.component';\r\nimport { RecipeNewComponent } from './modules/recipe/components/recipe-new/recipe-new.component';\r\n\r\nconst routes: Routes = [\r\n    { path: 'Recipe', component: RecipeListComponent },\r\n    { path: 'Recipe/Show/:id', component: RecipeDetailComponent },\r\n    { path: 'Recipe/Edit/:id', component: RecipeEditComponent },\r\n    { path: 'Recipe/New', component: RecipeNewComponent },\r\n    { path: 'Component', component: ComponentListComponent },\r\n    { path: 'Component/Show/:id', component: ComponentDetailComponent },\r\n    { path: 'Component/Edit/:id', component: ComponentEditComponent },\r\n    { path: 'Component/New', component: ComponentNewComponent }\r\n\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(\r\n            routes,\r\n            { enableTracing: false }\r\n        ),\r\n    ],\r\n    exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { componentFactoryName } from '@angular/compiler';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { MatSnackBar, MatSnackBarRef } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, Observer, Subject } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Instruction } from 'src/app/models/instruction';\r\nimport { Recipe } from 'src/app/models/recipe';\r\nimport { ResponseMessage } from 'src/app/models/responseMessage';\r\nimport { Unit } from 'src/app/models/unit';\r\nimport { ComponentNewComponent } from 'src/app/modules/recipe-component/components/component-new/component-new.component';\r\nimport { DataService } from 'src/app/services/data.service';\r\nimport { RecipeComponent } from '../../../../models/recipeComponent';\r\n\r\n@Component({\r\n    selector: 'app-recipe-new',\r\n    templateUrl: './recipe-new.component.html',\r\n    styleUrls: ['./recipe-new.component.scss']\r\n})\r\nexport class RecipeNewComponent implements OnInit {\r\n\r\n    recipeName: string = '';\r\n    people: number = 2;\r\n\r\n    availableComponents: RecipeComponent[] = [];\r\n    filteredComponents: RecipeComponent[] = [];\r\n    currentComponents: RecipeComponent[] = [];\r\n    componentsLegal: boolean[] = [];\r\n\r\n    availableUnits: Unit[] = [];\r\n    filteredUnits: Unit[] = [];\r\n\r\n    currentInstructions: Instruction[] = [];\r\n\r\n    constructor(private dataService: DataService, private router: Router, private snackbar: MatSnackBar, private dialog: MatDialog) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.loadAllComponents();\r\n        this.loadAllUnits();\r\n    }\r\n\r\n    loadAllComponents(): void {\r\n        this.dataService.getAllComponents().subscribe(\r\n            (data: RecipeComponent[]) => {\r\n                this.availableComponents = data;\r\n                this.availableComponents = this.availableComponents.filter(component => component.id && component.id > 0);\r\n            },\r\n            error => {\r\n                this.snackbar.open('Verbindung zum Server konnte nicht hergestellt werden', 'Schließen', { duration: 5000 });\r\n            }\r\n        );\r\n    }\r\n\r\n    loadAllUnits(): void {\r\n        this.dataService.getAllUnits().subscribe(\r\n            (data: Unit[]) => {\r\n                this.availableUnits = data;\r\n                console.log(this.availableUnits);\r\n            },\r\n            error => {\r\n                this.snackbar.open('Verbindung zum Server konnte nicht hergestellt werden', 'Schließen', { duration: 5000 });\r\n            }\r\n        );\r\n    }\r\n\r\n    mainToolbarClicked(action: string): void {\r\n        switch (action) {\r\n            case 'save':\r\n                this.saveRecipe();\r\n                break;\r\n            case 'close':\r\n                this.router.navigate(['Recipe']);\r\n        }\r\n    }\r\n\r\n    componentToolbar(action: string): void {\r\n        switch (action) {\r\n            case 'add':\r\n                this.addComponentToList();\r\n                break;\r\n        }\r\n    }\r\n\r\n    instructionToolbar(action: string): void {\r\n        switch (action) {\r\n            case 'add':\r\n                this.addInstructionToList();\r\n                break;\r\n        }\r\n    }\r\n\r\n    updateComponentFilter(inputString: string): void {\r\n        this.filteredComponents = this.availableComponents.filter((component: RecipeComponent) => {\r\n            return component.name.toLowerCase().includes(inputString.toLowerCase());\r\n        });\r\n    }\r\n\r\n    addComponentToList(): void {\r\n        let newComponent: RecipeComponent = {\r\n            name: '',\r\n            amount: 0,\r\n            unitName: 'Gramm',\r\n            unitShortname: 'g'\r\n        };\r\n        this.currentComponents.push(newComponent);\r\n        this.componentsLegal.push(false);\r\n    }\r\n\r\n    addInstructionToList(): void {\r\n        let newInstruction: Instruction = {\r\n            step: this.currentInstructions.length + 1,\r\n            description: ''\r\n        };\r\n        this.currentInstructions.push(newInstruction);\r\n    }\r\n\r\n    checkComponentLegal(index: number): void {\r\n        // the type component name is legal\r\n        if (this.availableComponents.map(component => component.name).includes(this.currentComponents[index].name)) {\r\n            this.componentsLegal[index] = true;\r\n        }\r\n        else {\r\n            this.componentsLegal[index] = false;\r\n        }\r\n    }\r\n\r\n    removeComponent(index: number) {\r\n        this.currentComponents.splice(index, 1);\r\n        this.componentsLegal.splice(index, 1);\r\n    }\r\n\r\n    removeInstruction(index: number) {\r\n        this.currentComponents.splice(index, 1);\r\n    }\r\n\r\n    saveRecipe() {\r\n        let undefinedComponentIndex = -1;\r\n        this.currentComponents.forEach((component, index) => {\r\n            const existingComponent = this.availableComponents.find(availableComponent =>\r\n                availableComponent.name === component.name\r\n            );\r\n\r\n            if (existingComponent === undefined) {\r\n                component.id = 0;\r\n                undefinedComponentIndex = index;\r\n            }\r\n            else {\r\n                component.id = existingComponent.id;\r\n            }\r\n        });\r\n\r\n        if (undefinedComponentIndex !== -1) {\r\n            let snackbarRef = this.snackbar.open(`Die Zutat ${this.currentComponents[undefinedComponentIndex].name} exisitert nicht`, 'Hinzufügen', { duration: 10000 });\r\n\r\n            snackbarRef.onAction().subscribe(() => {\r\n                let dialogConfig = new MatDialogConfig;\r\n                dialogConfig.width = '600px';\r\n                dialogConfig.data = this.currentComponents[undefinedComponentIndex].name;\r\n                dialogConfig.disableClose = true;\r\n                dialogConfig.autoFocus = true;\r\n                dialogConfig.hasBackdrop = true;\r\n                let dialogRef = this.dialog.open(ComponentNewComponent, dialogConfig);\r\n\r\n                dialogRef.afterClosed().subscribe(result => {\r\n                    this.loadAllComponents();\r\n                });\r\n            });\r\n            return;\r\n        }\r\n\r\n        const recipe: Recipe = {\r\n            name: this.recipeName,\r\n            people: this.people,\r\n            components: this.currentComponents,\r\n            instructions: this.currentInstructions\r\n        };\r\n\r\n        this.dataService.postNewRecipe(recipe).subscribe((returnValue: ResponseMessage) => {\r\n            let id = returnValue.value;\r\n            if (id) {\r\n                this.router.navigate(['Recipe', 'Show', id]);\r\n            }\r\n            this.snackbar.open(returnValue.message, 'Schließen', { duration: 5000 });\r\n        },\r\n            error => {\r\n                this.snackbar.open('Verbindung zum Server konnte nicht hergestellt werden', 'Schließen', { duration: 5000 });\r\n            }\r\n        );\r\n    }\r\n}\r\n","<app-toolbar [actions]=\"['save', 'close']\" (clicked)=\"mainToolbarClicked($event)\"></app-toolbar>\r\n<div class=\"card-list card-list-wrap\">\r\n    <mat-card class=\"card\">\r\n        <mat-card-title>{{recipeName == '' ? 'Neues Rezept' : recipeName}}</mat-card-title>\r\n        <div class=\"main-recipe\">\r\n            <mat-form-field>\r\n                <mat-label>Name</mat-label>\r\n                <input matInput [(ngModel)]=\"recipeName\">\r\n            </mat-form-field>\r\n            <mat-form-field>\r\n                <mat-label>Personen</mat-label>\r\n                <input matInput type=\"number\" [(ngModel)]=\"people\">\r\n            </mat-form-field>\r\n        </div>\r\n\r\n    </mat-card>\r\n    <mat-card class=\"card\">\r\n        <mat-card-title>Zutaten</mat-card-title>\r\n\r\n        <div *ngFor=\"let component of currentComponents; let i = index\" class=\"single-component\">\r\n            <mat-form-field>\r\n                <mat-label>Zutat</mat-label>\r\n                <input type=\"text\" [(ngModel)]=\"component.name\" matInput [matAutocomplete]=\"componentAuto\"\r\n                    (keyup)=\"updateComponentFilter(component.name); checkComponentLegal(i);\"\r\n                    (click)=\"updateComponentFilter(component.name)\">\r\n                <mat-autocomplete autoActiveFirstOption #componentAuto=\"matAutocomplete\"\r\n                    (change)=checkComponentLegal(i);>\r\n                    <mat-option *ngFor=\"let autocompleteComponent of filteredComponents\"\r\n                        [value]=\"autocompleteComponent.name\">\r\n                        {{autocompleteComponent.name}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"thin\">\r\n                <mat-label>Menge</mat-label>\r\n                <input type=\"number\" [(ngModel)]=\"component.amount\" matInput>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"thin\">\r\n                <mat-label>Einheit</mat-label>\r\n                <mat-select [(ngModel)]=\"component.unitName\">\r\n                    <mat-option *ngFor=\"let unit of availableUnits\" [value]=\"unit.name\">{{unit.name}}\r\n                        ({{unit.shortname}})</mat-option>\r\n                </mat-select>\r\n            </mat-form-field>\r\n            <app-toolbar [small]=\"true\" [actions]=\"['delete']\" (clicked)=\"removeComponent(i)\"></app-toolbar>\r\n        </div>\r\n        <app-toolbar [actions]=\"['add']\" (clicked)=\"componentToolbar($event)\"></app-toolbar>\r\n    </mat-card>\r\n\r\n    <mat-card class=\"card\">\r\n        <mat-card-title>Arbeitsschritte</mat-card-title>\r\n        <div *ngFor=\"let instruction of currentInstructions; let i = index\" class=\"single-component\">\r\n            <mat-form-field class=\"thin\">\r\n                <mat-label>Schritt</mat-label>\r\n                <input type=\"number\" [(ngModel)]=\"instruction.step\" matInput>\r\n            </mat-form-field>\r\n\r\n            <mat-form-field class=\"grow\">\r\n                <mat-label>Beschreibung</mat-label>\r\n                <input type=\"text\" [(ngModel)]=\"instruction.description\" matInput>\r\n            </mat-form-field>\r\n            <app-toolbar [small]=\"true\" [actions]=\"['delete']\" (clicked)=\"removeInstruction(i)\"></app-toolbar>\r\n        </div>\r\n        <app-toolbar [actions]=\"['add']\" (clicked)=\"instructionToolbar($event)\"></app-toolbar>\r\n    </mat-card>\r\n\r\n</div>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n    enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n    .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}